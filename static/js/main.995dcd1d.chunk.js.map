{"version":3,"sources":["componets/Header.js","componets/Tracker.js","App.js","reportWebVitals.js","index.js"],"names":["Header","class","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Tracker","useState","item","setItem","useEffect","fetchitem","a","fetch","fetchdata","json","data","console","log","className","scope","map","elem","index","country","cases","deaths","recovered","tests","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAgCeA,MA7Bf,WACE,OACE,8BACE,qBAAKC,MAAM,8CAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,eAAeC,KAAK,IAA7B,2BAGA,wBACED,MAAM,iBACNE,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMP,MAAM,0BAEd,qBACEA,MAAM,2BACNQ,GAAG,mC,8BCuBAC,MA7Cf,WACE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAEAC,qBAAU,WACRC,MACA,IAEF,IAAMA,EAAS,uCAAG,8BAAAC,EAAA,sEACQC,MAAM,2CADd,cACVC,EADU,gBAEGA,EAAUC,OAFb,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,GACZP,EAAQO,GAJQ,2CAAH,qDAMf,OACE,qBAAKG,UAAU,YAAf,SACE,qBAAKtB,MAAM,mBAAX,SACE,wBAAOA,MAAM,+BAAb,UACE,gCACE,+BACE,oBAAIuB,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGZ,EAAKa,KAAI,SAACC,EAAKC,GACd,OACE,+BACA,6BAAKD,EAAKE,UACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,SACV,6BAAKJ,EAAKK,YACV,6BAAKL,EAAKM,UALDL,gBClBVM,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.995dcd1d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"#\">\r\n            Covid-Tracker\r\n          </a>\r\n          <button\r\n            class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div\r\n            class=\"collapse navbar-collapse\"\r\n            id=\"navbarSupportedContent\"\r\n          ></div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Tracker() {\r\n  const [item,setItem] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    fetchitem()\r\n  },[])\r\n\r\n  const fetchitem = async () =>{\r\n    const fetchdata = await fetch('https://corona.lmao.ninja/v2/countries/')\r\n    const data = await fetchdata.json()\r\n    console.log(data)\r\n    setItem(data)\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-striped table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Countries</th>\r\n              <th scope=\"col\">Cases</th>\r\n              <th scope=\"col\">Deaths</th>\r\n              <th scope=\"col\">Recovered</th>\r\n              <th scope=\"col\">Tests</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {item.map((elem,index) =>{\r\n              return (\r\n                <tr key={index}>\r\n                <td>{elem.country}</td>\r\n                <td>{elem.cases}</td>\r\n                <td>{elem.deaths}</td>\r\n                <td>{elem.recovered}</td>\r\n                <td>{elem.tests}</td>\r\n              </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracker;\r\n","import \"./App.css\";\nimport Header from \"./componets/Header\";\nimport Tracker from './componets/Tracker';\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Tracker/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}